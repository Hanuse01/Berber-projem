// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

enum Role {
  USER
  ADMIN
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

model User {
  id                String    @id @default(cuid())
  name              String
  email             String    @unique
  password          String
  role              Role      @default(USER)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  appointments      Appointment[]
  messagesSent      Message[] @relation("SentMessages")
  messagesReceived  Message[] @relation("ReceivedMessages")
  image             String?   // Profil resmi (opsiyonel)
  phone             String?   // Telefon numarasÄ± (opsiyonel)
}

model Appointment {
  id         String   @id @default(cuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  serviceId  String
  service    Service  @relation(fields: [serviceId], references: [id])
  date       DateTime
  status     AppointmentStatus @default(PENDING)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Service {
  id            String    @id @default(cuid())
  name          String
  description   String?
  price         Float
  appointments  Appointment[]
}

model Message {
  id         String   @id @default(cuid())
  senderId   String
  sender     User     @relation("SentMessages", fields: [senderId], references: [id])
  receiverId String
  receiver   User     @relation("ReceivedMessages", fields: [receiverId], references: [id])
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}